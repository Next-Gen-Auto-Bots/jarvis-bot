name: Python Package using Conda

on: [push, pull_request]

permissions:
  contents: read
  issues: none
  pull-requests: none
  id-token: none
  deployments: none

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniconda-version: "latest"
        activate-environment: test-env
        python-version: ${{ matrix.python-version }}
        channels: conda-forge,defaults
        channel-priority: strict
        auto-update-conda: true
        use-only-tar-bz2: true
    
    - name: Display conda info
      shell: bash -el {0}
      run: |
        conda info
        conda list
        conda config --show-sources
        conda config --show
    
    - name: Create conda environment if needed
      shell: bash -el {0}
      run: |
        conda create -n test-env python=${{ matrix.python-version }} -y
    
    - name: Install dependencies
      shell: bash -el {0}
      run: |
        conda activate test-env
        conda install -c conda-forge pytest flake8 -y
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Lint with flake8
      shell: bash -el {0}
      run: |
        conda activate test-env
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      shell: bash -el {0}
      run: |
        conda activate test-env
        pytest
